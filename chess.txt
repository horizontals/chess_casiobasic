"""

入力待ち

some functional key
key to x,y


"""
"""
a:手番 1:white -1:black
b:ターン 1~199
c:入力フィールド 0:left 1:right
d:mode 1:pick 0:move
mat a:board
list:game record x:white y:black 

ghij:temp

k:getkey

k -> mat[n,o] -> r -> locate p,q
nopqr:tentative or move to (after)

nopqr -> stuvw:move from (before)

mat a[y,x]=x,y
    row,column
情報は基本的にmatrixの行列の順に保存
表示するときや、記譜するときはその時に変換する

abcd  gh  k  nopqrstuvw
    ef  ij lm          xyz


"""
=====================================================================================

"rnbqkbnr


        RNBQKBN"

locate 16,4,"R"

[[-5,-4,-3,-2,-1,-3,-4,-5]
[-6,-6,-6,-6,-6,-6,-6,-6]
[0,0,0,0,0,0,0,0]
[0,0,0,0,0,0,0,0]
[0,0,0,0,0,0,0,0]
[0,0,0,0,0,0,0,0]
[6,6,6,6,6,6,6,6]
[5,4,3,2,1,3,4,5]] ->mat a

clrstat

a=1
b=1
c=0
d=1
p=1
q=1
r=mat a[1,1]


while 1     #key cycle while
    g=0
    do
        isz g
        g==100 => prog "s chess"
        !d and g==200 => locate p,q,"triangle"
        g==200 => g=0
        getkey -> k
    doend k==0
    prog "s chess"

    if k==left
    then
        c=0     #c:入力フィールド 0:left 1:right
    else if k==right
    then
        c=1
    else if k==function
    then
        while getkey
        whileend
        do
            getkey -> K
        doend k==0 or k>=8
        r=a*K
        k==7 => r=0
        mat a[n,o]=r
        prog "s chess"
    else if k<=7
    then
        r=a*K
        k==7 => r=0
        mat a[n,o]=r
        prog "s chess"
    else
        int(k/10) -> g
        k-10*g -> h
        if 2<=g and g<=7 and h<=4
        then
            8-g -> n
            h+4*c -> o
        else if g==2 or g==3
        then
            10-g -> n
            h+4*(c-1) -> o
        else if k==57
        then
            n=8
            o=4*(c+1)
        else if k==77
        then
            n=7
            o=4*(c+1)
        else
            goto a
        ifend
        ifend
        ifend
        ifend       #keycode to mat x,y
        mat a[n,o] -> r
        if n<=4
        then
            p=o
            q=n
        else
            p=o+8
            q=n-4
        ifend
        if d        #d:mode 1:pick 0:move
        then        #pick
            if r*a>0
            then        #pick successful
                nopqr -> stuvw
                d=0
                locate p,q,"triangle"
            else        #pick unsuccessful
                locate p,q,"*"
            ifend
        else
            d=1
            if r*a<=0
            then        #(tentative) move successful
                mat a[n,o]=w
                r=w
                mat a[s,t]=0
                w=0
                prog "s chess"
                uvw -> pqr
                prog "s chess"
                g=10000*r + 1000*t + 100*(9-s) + 10*o + (9-n)
                if a=1      #game record
                then
                    list x[b]=g
                else
                    list y[b]=-g
                    isz b
                ifend
                -a -> a
            else        #pick unsuccessful
                locate p,q,"*"
            ifend
        ifend       # 4 pattern process
    ifend
    ifend
    ifend
    ifend       #process for each key

    lbl a

    while getkey
    whileend

whileend








==============s chess===========

r==0 => locate p,q," "
r==6 => locate p,q,"P"
r==5 => locate p,q,"R"
r==4 => locate p,q,"N"
r==3 => locate p,q,"B"
r==2 => locate p,q,"Q"
r==1 => locate p,q,"K"
r==-6 => locate p,q,"p"     #eng
r==-5 => locate p,q,"r"     #stat
r==-4 => locate p,q,"n"     #eng
r==-3 => locate p,q,"b"     #stat
r==-2 => locate p,q,"9"     #9
r==-1 => locate p,q,"k"     #eng
